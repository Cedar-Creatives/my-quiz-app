import React, { useState } from "react";
import axios from "axios";
import "./App.css";

// List of software engineering topics for junior developers
const topics = [
  { name: "Version Control (Git)", order: 1 },
  { name: "HTML & CSS Basics", order: 2 },
  { name: "JavaScript Fundamentals", order: 3 },
  { name: "DOM Manipulation", order: 4 },
  { name: "Responsive Design", order: 5 },
  { name: "Package Managers (npm/yarn)", order: 6 },
  { name: "Basic Terminal Commands", order: 7 },
  { name: "React Basics", order: 8 },
  { name: "APIs & HTTP", order: 9 },
  { name: "Debugging & Testing", order: 10 },
  { name: "Basic Data Structures", order: 11 },
  { name: "Problem Solving", order: 12 },
  { name: "Soft Skills & Communication", order: 13 },
];

function App() {
  const [selectedTopic, setSelectedTopic] = useState(null);
  const [quizStarted, setQuizStarted] = useState(false);
  const [questions, setQuestions] = useState([]);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [score, setScore] = useState(0);


  const handleTopicSelect = (topic) => {
    setSelectedTopic(topic);
    setQuizStarted(false);
  };

  const handleStartQuiz = async () => {
    try {
      const response = await axios.post(
        "http://localhost:5000/api/generate-quiz",
        {
          topic: selectedTopic.name,
          complexity: "beginner",
        }
      );
      setQuestions(response.data.questions);
      setQuizStarted(true);
    } catch (error) {
      console.error("Error fetching questions:", error);
    }
  };



  return (
    <div className="App">
      <header className="App-header">
        <h1>Software Engineering Quiz App</h1>
        {!selectedTopic ? (
          <div>
            <h2>Select a Topic to Begin</h2>
            <ul style={{ listStyle: "none", padding: 0 }}>
              {topics
                .sort((a, b) => a.order - b.order)
                .map((topic, idx) => (
                  <li key={idx} style={{ margin: "10px 0" }}>
                    <button
                      onClick={() => handleTopicSelect(topic)}
                      style={{ fontSize: "1.1em", padding: "8px 16px" }}
                    >
                      {topic.order}. {topic.name}
                    </button>
                  </li>
                ))}
            </ul>
          </div>
        ) : !quizStarted ? (
          <div>
            <h2>Topic: {selectedTopic.name}</h2>
            <button
              onClick={handleStartQuiz}
              style={{ fontSize: "1.1em", padding: "8px 16px", margin: "10px" }}
            >
              Start Quiz
            </button>
            <button
              onClick={() => setSelectedTopic(null)}
              style={{ fontSize: "1em", padding: "6px 12px", margin: "10px" }}
            >
              Back to Topics
            </button>
          </div>
        ) : (
          <div>
            <h2>Quiz for: {selectedTopic.name}</h2>
            <p>Quiz questions will be generated by AI here (coming soon).</p>
            <button
              onClick={() => setQuizStarted(false)}
              style={{ fontSize: "1em", padding: "6px 12px", margin: "10px" }}
            >
              Back to Topic
            </button>
          </div>
        )}
      </header>
    </div>
  );
}

export default App;
